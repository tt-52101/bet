version: '3.7'
services:

  auth:
    build:
      context: ./docker/images
      dockerfile: php.Dockerfile
    tty: true
    environment:
      CONTAINER_ROLE: app
    working_dir: /var/www/html
    volumes:
      - ./auth/src:/var/www/html
      - ./auth/src/storage/app/public/:/var/www/html/public/storage/
      - ./auth/docker/apache:/etc/apache2/sites-enabled/
    depends_on:
      - mysql
      - redis
    ports:
      - "90:80"
    networks:
      - app-network

  #Nginx Service
  gateway:
    image: nginx:alpine
    restart: unless-stopped
    tty: true
    environment:
      - VIRTUAL_PORT=80
      - VIRTUAL_HOST=project.local
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  ### MySQL ################################################
  mysql:
    image: mariadb
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${APP_DATABASE}
      MYSQL_USER: ${APP_USER}
      MYSQL_PASSWORD: ${APP_USER_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${APP_ROOT_PASSWORD}
      SERVICE_TAGS:
      SERVICE_NAME: mysql
    volumes:
      - ./volumes/mysql/logs:/var/log/mysql
      - ./volumes/mysql/data:/var/lib/mysql
    depends_on:
      - mongodb
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      - PMA_ARBITRARY=1
    volumes:
      - ./docker/phpmyadmin/conf.d:/var/www/html/config.inc.php
    ports:
      - "9001:80"
    networks:
      - app-network

  redis:
    image: redis:alpine
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - ./volumes/redis:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - app-network

  mongodb:
    image: mongo
    logging:
      options:
        max-file: "5"
        max-size: "100m"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
      - MONGO_APP_SERVER_USERNAME=${MONGO_APP_SERVER_USERNAME}
      - MONGO_APP_SERVER_PASSWORD=${MONGO_APP_SERVER_PASSWORD}
    volumes:
      - ./volumes/mongodb:/data/db
      - ./auth/docker/mongodb/init/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
    ports:
      - "27017:27017"
    networks:
      - app-network

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_APP_SERVER_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_APP_SERVER_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_APP_SERVER_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_APP_SERVER_PASSWORD}
    networks:
      - app-network
networks:
  app-network:
    driver: bridge